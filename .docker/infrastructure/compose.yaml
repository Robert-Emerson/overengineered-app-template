name: microservice-chassis-infrastructure

volumes:
  pgdata:

services:
  auth-db:
    image: postgres
    restart: always
    user: postgres
    build:
      context: ../../infrastructure/db/
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_root_password
      KC_DB_LOGIN: /run/secrets/kc_db_login
      KC_DB_PASSWORD: /run/secrets/kc_db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ../../infrastructure/db/init:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    secrets:
      - db_root_password
      - kc_db_login
      - kc_db_password

  auth:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HOSTNAME: auth.localhost
      KC_HOSTNAME_PORT: 9090
      KEYCLOAK_ADMIN: ${KC_ADMIN_LOGIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KEYCLOAK_USER: ${KC_USER_LOGIN}
      KEYCLOAK_PASSWORD: ${KC_USER_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db/keycloak
      KC_DB_USERNAME: ${KC_DB_LOGIN}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: /certs/external.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /certs/external.key
    ports:
      - 9090:8443
      - 9000:9000
    volumes:
      - ../../certs/external_localhost.pem:/certs/external.pem
      - ../../certs/external_localhost.key:/certs/external.key
    depends_on:
      - auth-db
    restart: always
    command: start

  ingress-proxy:
    build:
      context: ../../infrastructure/envoy/
      args:
        ENVOY_VARIANT: contrib-dev
    ports:
      - "8080:8080"
      - "8001:8001"
      - "5432:5432"
    volumes:
      - ../../certs:/certs
